{
	"AWSTemplateFormatVersion": "2010-09-09",
	"Description": "This CloudFormation stack is created to image resizing application.",
	"Parameters": {
		"SourceBucketName": {
			"Type": "String",
			"Description": "The name of the source bucket to create",
			"Default": "mnezir-source-bucket"
		},
		"TargetBucketName": {
			"Type": "String",
			"Description": "The name of the target bucket to create",
			"Default": "mnezir-target-bucket"
		},
		"TableName": {
			"Type": "String",
			"Description": "The name of the dynamodb table to create",
			"Default": "helloTable"
		}
	},
	"Resources": {
		"Table": {
			"Type": "AWS::DynamoDB::Table",
			"Properties": {
				"BillingMode": "PAY_PER_REQUEST",
				"AttributeDefinitions": [
					{
						"AttributeName": "ImagePath",
						"AttributeType": "S"
					}
				],
				"KeySchema": [
					{
						"AttributeName": "ImagePath",
						"KeyType": "HASH"
					}
				],
				"TableName": {
					"Ref": "TableName"
				}
			}
		},
		"LambdaFunction": {
			"Type": "AWS::Lambda::Function",
			"Properties": {
				"Code": {
					"ZipFile": "exports.handler = (event) => { return new Promise(function(resolve, reject) { resolve('OK'); }) };"
				},
				"Handler": "index.handler",
				"MemorySize": 128,
				"Role": {
					"Fn::GetAtt": [
						"LambdaExecutionRole",
						"Arn"
					]
				},
				"Runtime": "nodejs16.x",
				"Timeout": "300",
				"Environment": {
					"Variables": {
						"TABLE_NAME": {
							"Ref": "TableName"
						},
						"TARGET_BUCKET": {
							"Ref": "TargetBucketName"
						}
					}
				}
			}
		},
		"FunctionPermission": {
			"Type": "AWS::Lambda::Permission",
			"Properties": {
				"Action": "lambda:InvokeFunction",
				"FunctionName": {
					"Ref": "LambdaFunction"
				},
				"Principal": "s3.amazonaws.com"
			}
		},
		"LambdaExecutionRole": {
			"Type": "AWS::IAM::Role",
			"Properties": {
				"AssumeRolePolicyDocument": {
					"Version": "2012-10-17",
					"Statement": [
						{
							"Effect": "Allow",
							"Principal": {
								"Service": "lambda.amazonaws.com"
							},
							"Action": "sts:AssumeRole"
						}
					]
				},
				"Path": "/",
				"Policies": [
					{
						"PolicyName": "S3Access",
						"PolicyDocument": {
							"Version": "2012-10-17",
							"Statement": [
								{
									"Effect": "Allow",
									"Action": [
										"s3:GetObject"
									],
									"Resource": {
										"Fn::Sub": "arn:aws:s3:::${SourceBucketName}/*"
									}
								},
								{
									"Effect": "Allow",
									"Action": [
										"s3:PutObject"
									],
									"Resource": {
										"Fn::Sub": "arn:aws:s3:::${TargetBucketName}/*"
									}
								}
							]
						}
					},
					{
						"PolicyName": "DynamoAccess",
						"PolicyDocument": {
							"Version": "2012-10-17",
							"Statement": [
								{
									"Effect": "Allow",
									"Action": [
										"dynamodb:PutItem"
									],
									"Resource": {
										"Fn::Sub": "arn:aws:dynamodb:${AWS::Region}:${AWS::AccountId}:table/${TableName}"
									}
								}
							]
						}
					}
				],
				"ManagedPolicyArns": [
					"arn:aws:iam::aws:policy/service-role/AWSLambdaBasicExecutionRole"
				]
			}
		},
		"SourceBucket": {
			"Type": "AWS::S3::Bucket",
			"Properties": {
				"BucketName": {
					"Ref": "SourceBucketName"
				},
				"NotificationConfiguration": {
					"LambdaConfigurations": [
						{
							"Event": "s3:ObjectCreated:*",
							"Function": {
								"Fn::GetAtt": [
									"LambdaFunction",
									"Arn"
								]
							},
							"Filter": {
								"S3Key": {
									"Rules": [
										{
											"Name": "prefix",
											"Value": "images/"
										}
									]
								}
							}
						}
					]
				}
			}
		},
		"TargetBucket": {
			"Type": "AWS::S3::Bucket",
			"Properties": {
				"BucketName": {
					"Ref": "TargetBucketName"
				}
			}
		}
	},
	"Outputs": {
		"DynamoTableArn": {
			"Description": "The ARN of the dynamodb table.",
			"Value": {
				"Fn::GetAtt": [
					"Table",
					"Arn"
				]
			}
		}
	}
}